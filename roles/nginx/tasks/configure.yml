---
- name: open http ports
  firewalld:
    service: "{{ item }}"
    permanent: true
    state: enabled
    immediate: yes
  with_items:
    - http
    - https
  when: open_http_ports_firewalld

- name: SELinux allow connect to remote db
  seboolean:
    name: httpd_can_network_connect_db
    state: true
    persistent: yes
  when: selinux_remote_db

- name: copy nginx conf file
  template:
    src: 'nginx.conf.j2'
    dest: "/etc/nginx/nginx.conf"
    owner: root
    group: root
    mode: 0644
    backup: yes
  notify:
    - restart nginx service

- name: create sites-available and sites-enabled directories for vhosts
  file:
    path: "/etc/nginx/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items:
    - 'sites-available'
    - 'sites-enabled'

# Create default site if variable is set to true
- name: create default site configurations
  template:
    src: "default.conf.j2"
    dest: "/etc/nginx/sites-available/default.conf"
    mode: 0644
  when: nginx_create_default_site

- name: enable default site
  file:
    path: "/etc/nginx/sites-enabled/default.conf"
    src: "/etc/nginx/sites-available/default.conf"
    state: link
  when: nginx_create_default_site
  notify:
    - reload nginx service

- name: create default site directory
  file:
    path: "{{ nginx_root }}"
    state: directory
    recurse: yes
    owner: nginx
    group: nginx
    mode: 0755
  when: nginx_create_default_site

- name: copy default index file
  template:
    src: 'index.html.j2'
    dest: "{{ nginx_root }}/{{ nginx_index }}"
  when: nginx_create_default_site


# Create vhosts for nginx_php_sites
- name: create php vhosts
  template:
    src: 'php_vhost.conf.j2'
    dest: "/etc/nginx/sites-available/{{ item['server']['domain'] }}"
  with_items: "{{ nginx_php_sites }}"
  when: nginx_php_sites != 'none'

- name: create sym link to enable vhosts
  file:
    path: "/etc/nginx/sites-enabled/{{ item['server']['domain'] }}"
    src: "/etc/nginx/sites-available/{{ item['server']['domain'] }}"
    state: link
  with_items: "{{ nginx_php_sites }}"
  when: nginx_php_sites != 'none'
  notify:
    - reload nginx service